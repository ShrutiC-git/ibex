# Global configuration options.
ARG VERILATOR_VERSION=4.210
ARG VERIBLE_VERSION=v0.0-2135-gb534c1fe
# The RISCV toolchain version should match the release tag used in GitHub.
ARG RISCV_TOOLCHAIN_TAR_VERSION=20220210-1
ARG RUST_VERSION=1.60.0
# This should match the version in bazelish.sh.
ARG BAZELISK_VERSION=v1.11.0
# This should match the version in ci/install-package-dependencies.sh
ARG GCC_VERSION=9
# This should match the version of the lowRISC RISC-V toolchain.
ARG CLANG_VERSION=13

# Main container image.
FROM ubuntu:20.04 AS opentitan
ARG VERILATOR_VERSION
ARG VERIBLE_VERSION
ARG RISCV_TOOLCHAIN_TAR_VERSION
ARG RUST_VERSION
ARG BAZELISK_VERSION
ARG GCC_VERSION
ARG CLANG_VERSION

# Use bash as default shell.
RUN ln -sf /bin/bash /bin/sh

# Necessary to avoid user interaction with tzdata during install
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

COPY apt-requirements.txt apt-requirements.txt
RUN echo "verilator-${VERILATOR_VERSION}" >>/tmp/apt-requirements.txt \
    && sed -i -e '/^$/d' -e '/^#/d' -e 's/#.*//' /tmp/apt-requirements.txt \
    && apt-get update && \
    apt-get install -y <apt-requirements.txt \
        sudo \
        gosu \
        locales \
        locales-all \
        minicom \
        screen \
        dc \
        time \
        software-properties-common \
        verilator
    && apt-get clean; \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*

# RISC-V device toolchain
COPY ./get-toolchain.py /tmp/get-toolchain.py
RUN chmod +x /tmp/get-toolchain.py
RUN  /tmp/get-toolchain.py -r ${RISCV_TOOLCHAIN_TAR_VERSION} \
    && rm -f /tmp/get-toolchain.py  

# Install Python plus packages.
# Explicitly updating pip and setuptools is required to have these tools
# properly parse Python-version metadata, which some packages uses to
# specify that an older version of a package must be used for a certain
# Python version. If that information is not read, pip installs the latest
# version, which then fails to run.
ENV PATH "/home/dev/.local/bin:${PATH}"

RUN apt-get update && \
    apt-get install -y python3-pip pip
COPY python-requirements.txt python-requirements.txt
COPY google_risc-dv/requirements.txt vendor/google_riscv-dv/requirements.txt


RUN sudo apt-get install -y build-essential cmake git libjson-c-dev libwebsockets-dev && \
    pip install -r python-requirements.txt \
        --no-warn-script-location \
    && rm -f ./python-requirements.txt

RUN sudo apt-get install -y libelf-dev srecord && \ 
    git clone https://github.com/tsl0922/ttyd.git && \ 
    cd ttyd && mkdir build && cd build && \ 
    cmake .. && \ 
    make && sudo make install
